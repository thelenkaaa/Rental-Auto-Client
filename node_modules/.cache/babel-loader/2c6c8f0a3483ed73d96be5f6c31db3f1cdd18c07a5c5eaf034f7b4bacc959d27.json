{"ast":null,"code":"var _jsxFileName = \"/Users/lenka/Documents/Web/Web-technologies/src/components/order/CarPage.tsx\";\nimport Order from './Order';\nimport CarInfo from './CarInfo';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CarPage = () => {\n  var _s = $RefreshSig$();\n  function getCarIdFromUrlParams() {\n    const urlParams = new URLSearchParams(window.location.search);\n    return urlParams.get('car_id');\n  }\n  function CarDetails() {\n    _s();\n    const [carId, setCarId] = useState(null);\n    useEffect(() => {\n      const id = getCarIdFromUrlParams();\n      if (id !== null) {\n        setCarId(id);\n      }\n    }, []);\n    if (carId === null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Car Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Car ID: \", carId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n  _s(CarDetails, \"pypfPTCOHDxM89kftrVYypS+EY8=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"car-container my-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row row-cols-2 gy-4\",\n        children: [/*#__PURE__*/_jsxDEV(CarInfo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Order, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_c = CarPage;\nexport default CarPage;\nvar _c;\n$RefreshReg$(_c, \"CarPage\");","map":{"version":3,"names":["Order","CarInfo","useEffect","useState","jsxDEV","_jsxDEV","CarPage","_s","$RefreshSig$","getCarIdFromUrlParams","urlParams","URLSearchParams","window","location","search","get","CarDetails","carId","setCarId","id","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/lenka/Documents/Web/Web-technologies/src/components/order/CarPage.tsx"],"sourcesContent":["import Order from './Order'\nimport CarInfo from './CarInfo'\nimport { useEffect, useState } from 'react';\n\nconst CarPage = () => {\n\n  function getCarIdFromUrlParams() {\n    const urlParams = new URLSearchParams(window.location.search);\n    return urlParams.get('car_id');\n  }\n  \n  function CarDetails() {\n    const [carId, setCarId] = useState<string | null>(null);\n  \n    useEffect(() => {\n      const id = getCarIdFromUrlParams();\n      if (id !== null) {\n        setCarId(id);\n      }\n    }, []);\n  \n    if (carId === null) {\n      return <div>Loading...</div>;\n    }\n\n    return (\n      <div>\n        <h1>Car Details</h1>\n        <p>Car ID: {carId}</p>\n        {/* Render the rest of the car details here */}\n      </div>\n    );\n  }\n\n\n  return (\n    <div>\n        <div className=\"car-container my-4\">\n            <div className=\"row row-cols-2 gy-4\">\n                <CarInfo />\n                <Order />\n            </div>\n        </div>\n    </div>\n  )\n}\n\nexport default CarPage"],"mappings":";AAAA,OAAOA,KAAK,MAAM,SAAS;AAC3B,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAEpB,SAASC,qBAAqBA,CAAA,EAAG;IAC/B,MAAMC,SAAS,GAAG,IAAIC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;IAC7D,OAAOJ,SAAS,CAACK,GAAG,CAAC,QAAQ,CAAC;EAChC;EAEA,SAASC,UAAUA,CAAA,EAAG;IAAAT,EAAA;IACpB,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAgB,IAAI,CAAC;IAEvDD,SAAS,CAAC,MAAM;MACd,MAAMiB,EAAE,GAAGV,qBAAqB,EAAE;MAClC,IAAIU,EAAE,KAAK,IAAI,EAAE;QACfD,QAAQ,CAACC,EAAE,CAAC;MACd;IACF,CAAC,EAAE,EAAE,CAAC;IAEN,IAAIF,KAAK,KAAK,IAAI,EAAE;MAClB,oBAAOZ,OAAA;QAAAe,QAAA,EAAK;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM;IAC9B;IAEA,oBACEnB,OAAA;MAAAe,QAAA,gBACEf,OAAA;QAAAe,QAAA,EAAI;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACpBnB,OAAA;QAAAe,QAAA,GAAG,UAAQ,EAACH,KAAK;MAAA;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAElB;EAEV;EAACjB,EAAA,CArBQS,UAAU;EAwBnB,oBACEX,OAAA;IAAAe,QAAA,eACIf,OAAA;MAAKoB,SAAS,EAAC,oBAAoB;MAAAL,QAAA,eAC/Bf,OAAA;QAAKoB,SAAS,EAAC,qBAAqB;QAAAL,QAAA,gBAChCf,OAAA,CAACJ,OAAO;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eACXnB,OAAA,CAACL,KAAK;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACP;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACJ;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEV,CAAC;AAAAE,EAAA,GAzCKpB,OAAO;AA2Cb,eAAeA,OAAO;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}