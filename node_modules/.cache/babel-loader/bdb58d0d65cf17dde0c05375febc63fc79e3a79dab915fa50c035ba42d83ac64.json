{"ast":null,"code":"var _jsxFileName = \"/Users/lenka/Documents/Web/Web-technologies/src/components/main/CarsButtons.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"./CarsButtons.css\";\nimport CarInstance from './CarInstance';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AvailButton = () => {\n  _s();\n  const [cars, setCars] = useState([]);\n\n  // Function to fetch cars based on status\n  const getCarsByStatusAvail = () => {\n    fetch(`/getByStatusAvail`).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      setCars(data);\n    }).catch(error => {\n      console.error('There was a problem fetching the cars:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"my-4 d-flex justify-content-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"car-status-button mx-2\",\n      onClick: () => getCarsByStatusAvail,\n      children: \"available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), cars.map(car => /*#__PURE__*/_jsxDEV(CarInstance, {\n      strMark: car.mark,\n      strPrice: car.price.toString(),\n      strImagePath: Car8\n    }, car.car_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(AvailButton, \"SbbgPvtmlEuAK5fVh8Mwc2/uV5Y=\");\n_c = AvailButton;\nvar _c;\n$RefreshReg$(_c, \"AvailButton\");","map":{"version":3,"names":["React","useState","CarInstance","jsxDEV","_jsxDEV","AvailButton","_s","cars","setCars","getCarsByStatusAvail","fetch","then","response","ok","Error","json","data","catch","error","console","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","car","strMark","mark","strPrice","price","toString","strImagePath","Car8","car_id","_c","$RefreshReg$"],"sources":["/Users/lenka/Documents/Web/Web-technologies/src/components/main/CarsButtons.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport \"./CarsButtons.css\";\nimport CarInstance from './CarInstance'\n\n\nexport const AvailButton = () => {\n  const [cars, setCars] = useState([]);\n\n  // Function to fetch cars based on status\n  const getCarsByStatusAvail = () => {\n    fetch(`/getByStatusAvail`)\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then((data) => {\n        setCars(data);\n      })\n      .catch((error) => {\n        console.error('There was a problem fetching the cars:', error);\n      });\n  };\n\n  return (\n    <div className=\"my-4 d-flex justify-content-center\">\n      <button className=\"car-status-button mx-2\" onClick={() => getCarsByStatusAvail}>available</button>\n      {/* // <button className=\"car-status-button mx-2\" onClick={() => getCarsByStatus('Unavail')}>unavailable</button> */}\n\n      {/* Render the cars */}\n      {cars.map((car) => (\n                    <CarInstance\n                        key={car.car_id}\n                        strMark={car.mark}\n                        strPrice={car.price.toString()}\n                        strImagePath={Car8}\n                    />\n                ))}\n    </div>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,mBAAmB;AAC1B,OAAOC,WAAW,MAAM,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGvC,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACA,MAAMQ,oBAAoB,GAAGA,CAAA,KAAM;IACjCC,KAAK,CAAE,mBAAkB,CAAC,CACvBC,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,OAAOF,QAAQ,CAACG,IAAI,EAAE;IACxB,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAK;MACdR,OAAO,CAACQ,IAAI,CAAC;IACf,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;IAChE,CAAC,CAAC;EACN,CAAC;EAED,oBACEd,OAAA;IAAKgB,SAAS,EAAC,oCAAoC;IAAAC,QAAA,gBACjDjB,OAAA;MAAQgB,SAAS,EAAC,wBAAwB;MAACE,OAAO,EAAEA,CAAA,KAAMb,oBAAqB;MAAAY,QAAA,EAAC;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,EAIjGnB,IAAI,CAACoB,GAAG,CAAEC,GAAG,iBACAxB,OAAA,CAACF,WAAW;MAER2B,OAAO,EAAED,GAAG,CAACE,IAAK;MAClBC,QAAQ,EAAEH,GAAG,CAACI,KAAK,CAACC,QAAQ,EAAG;MAC/BC,YAAY,EAAEC;IAAK,GAHdP,GAAG,CAACQ,MAAM;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAKtB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACR;AAEV,CAAC;AAACpB,EAAA,CApCWD,WAAW;AAAAgC,EAAA,GAAXhC,WAAW;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}