{"ast":null,"code":"const server_url = 'http://localhost:63341';\nexport async function fetch_data_with_error(rel_url, method) {\n  let body = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  let authorized = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  const url = server_url + rel_url;\n  const headers = {\n    'Content-Type': 'application/json'\n  };\n  if (authorized) {\n    headers['Authorization'] = `Bearer ${localStorage.getItem('access_token')}`;\n  }\n  const response = await fetch(url, {\n    method: method,\n    headers: headers,\n    body: body && JSON.stringify(body)\n  });\n  const data = await response.json();\n  return data;\n}\nexport async function fetch_data(rel_url, method) {\n  let body = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  let authorized = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  const url = server_url + rel_url;\n  const headers = {\n    'Content-Type': 'application/json'\n  };\n  if (authorized) {\n    headers['Authorization'] = `Bearer ${localStorage.getItem('access_token')}`;\n  }\n  try {\n    const response = await fetch(url, {\n      method: method,\n      headers: headers,\n      body: body && JSON.stringify(body)\n    });\n    if (!response.ok) {\n      throw new Error(response.status + ': ' + response.statusText);\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw new Error(`Failed to fetch ${url}: ${error.message}`);\n  }\n}","map":{"version":3,"names":["server_url","fetch_data_with_error","rel_url","method","body","arguments","length","undefined","authorized","url","headers","localStorage","getItem","response","fetch","JSON","stringify","data","json","fetch_data","ok","Error","status","statusText","error","message"],"sources":["/Users/lenka/Documents/Web/Web-technologies/src/utils/error.tsx"],"sourcesContent":["const server_url = 'http://localhost:63341';\n\nexport async function fetch_data_with_error(rel_url: string, method: string, body: any=null, authorized=true) {\n    const url = server_url + rel_url;\n    const headers: Record<string, string> = {\n        'Content-Type': 'application/json'\n    };\n    \n    if (authorized){\n        headers['Authorization'] = `Bearer ${localStorage.getItem('access_token')}`;\n    }\n    \n    const response = await fetch(url, {\n        method: method,\n        headers: headers,\n        body: body && JSON.stringify(body)\n    })\n\n    const data = await response.json()\n    return data\n}\n\n\n\nexport async function fetch_data(rel_url: string, method: string, body: any=null, authorized=true) {\n    const url = server_url + rel_url;\n    const headers: Record<string, string> = {\n        'Content-Type': 'application/json'\n    };\n    if (authorized){\n        headers['Authorization'] = `Bearer ${localStorage.getItem('access_token')}`;\n    }\n    \n    try {\n        const response = await fetch(url, {\n            method: method,\n            headers: headers,\n            body: body && JSON.stringify(body)\n        })\n        if (!response.ok) {\n            throw new Error(response.status + ': ' + response.statusText)\n        }\n        const data = await response.json()\n        return data\n    } catch (error: any) {\n        throw new Error(`Failed to fetch ${url}: ${error.message}`)\n    }\n}\n\n"],"mappings":"AAAA,MAAMA,UAAU,GAAG,wBAAwB;AAE3C,OAAO,eAAeC,qBAAqBA,CAACC,OAAe,EAAEC,MAAc,EAAmC;EAAA,IAAjCC,IAAS,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,IAAI;EAAA,IAAEG,UAAU,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,IAAI;EACxG,MAAMI,GAAG,GAAGT,UAAU,GAAGE,OAAO;EAChC,MAAMQ,OAA+B,GAAG;IACpC,cAAc,EAAE;EACpB,CAAC;EAED,IAAIF,UAAU,EAAC;IACXE,OAAO,CAAC,eAAe,CAAC,GAAI,UAASC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAE,EAAC;EAC/E;EAEA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAG,EAAE;IAC9BN,MAAM,EAAEA,MAAM;IACdO,OAAO,EAAEA,OAAO;IAChBN,IAAI,EAAEA,IAAI,IAAIW,IAAI,CAACC,SAAS,CAACZ,IAAI;EACrC,CAAC,CAAC;EAEF,MAAMa,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;EAClC,OAAOD,IAAI;AACf;AAIA,OAAO,eAAeE,UAAUA,CAACjB,OAAe,EAAEC,MAAc,EAAmC;EAAA,IAAjCC,IAAS,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,IAAI;EAAA,IAAEG,UAAU,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,IAAI;EAC7F,MAAMI,GAAG,GAAGT,UAAU,GAAGE,OAAO;EAChC,MAAMQ,OAA+B,GAAG;IACpC,cAAc,EAAE;EACpB,CAAC;EACD,IAAIF,UAAU,EAAC;IACXE,OAAO,CAAC,eAAe,CAAC,GAAI,UAASC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAE,EAAC;EAC/E;EAEA,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAG,EAAE;MAC9BN,MAAM,EAAEA,MAAM;MACdO,OAAO,EAAEA,OAAO;MAChBN,IAAI,EAAEA,IAAI,IAAIW,IAAI,CAACC,SAAS,CAACZ,IAAI;IACrC,CAAC,CAAC;IACF,IAAI,CAACS,QAAQ,CAACO,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAACR,QAAQ,CAACS,MAAM,GAAG,IAAI,GAAGT,QAAQ,CAACU,UAAU,CAAC;IACjE;IACA,MAAMN,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;IAClC,OAAOD,IAAI;EACf,CAAC,CAAC,OAAOO,KAAU,EAAE;IACjB,MAAM,IAAIH,KAAK,CAAE,mBAAkBZ,GAAI,KAAIe,KAAK,CAACC,OAAQ,EAAC,CAAC;EAC/D;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}